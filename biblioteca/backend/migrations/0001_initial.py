# Generated by Django 5.2.7 on 2025-10-08 03:06

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Autor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('data_nascimento', models.DateField()),
                ('nacionalidade', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'autor',
            },
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'categoria',
            },
        ),
        migrations.CreateModel(
            name='Editora',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('endereco', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'editora',
            },
        ),
        migrations.CreateModel(
            name='Emprestimo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_livro', models.PositiveIntegerField()),
                ('id_usuario', models.PositiveIntegerField()),
                ('data_emprestimo', models.DateField(auto_now_add=True)),
            ],
            options={
                'db_table': 'emprestimo',
            },
        ),
        migrations.CreateModel(
            name='Livro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255)),
                ('autor', models.CharField(max_length=255)),
                ('ano_publicacao', models.PositiveIntegerField()),
                ('genero', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'livro',
            },
        ),
        migrations.CreateModel(
            name='Multa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_usuario', models.PositiveIntegerField()),
                ('valor_multa', models.DecimalField(decimal_places=2, max_digits=6)),
                ('data_pagamento', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'multa',
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_livro', models.PositiveIntegerField()),
                ('id_usuario', models.PositiveIntegerField()),
                ('data_reserva', models.DateField(auto_now_add=True)),
            ],
            options={
                'db_table': 'reserva',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('data_registro', models.DateField(auto_now_add=True)),
            ],
            options={
                'db_table': 'usuario',
            },
        ),
    ]
